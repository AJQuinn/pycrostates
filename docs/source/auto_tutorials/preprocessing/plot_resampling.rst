
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_tutorials\preprocessing\plot_resampling.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_tutorials_preprocessing_plot_resampling.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_tutorials_preprocessing_plot_resampling.py:


Resampling
==========

This example demonstrates how resemple a recording.

.. GENERATED FROM PYTHON SOURCE LINES 9-10

We start by loading some example data:

.. GENERATED FROM PYTHON SOURCE LINES 10-20

.. code-block:: default

    import mne
    from mne.io import read_raw_edf
    from mne.datasets import eegbci
    from mne.channels import make_standard_montage
    subject = 1
    runs = [1]

    raw_fnames = eegbci.load_data(subject, runs, update_path=True)[0]
    raw = read_raw_edf(raw_fnames, preload=True)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Extracting EDF parameters from C:\Users\Victor\mne_data\MNE-eegbci-data\files\eegmmidb\1.0.0\S001\S001R01.edf...
    EDF file detected
    Setting channel info structure...
    Creating raw.info structure...
    Reading 0 ... 9759  =      0.000 ...    60.994 secs...




.. GENERATED FROM PYTHON SOURCE LINES 21-24

We can now use the :func:`~pycrostates.preprocessing.resample`function to draw n_epochs of n_samples
for our recording where n_sample defines the number of sample cointained in each epoch
and n_epochs defines the number of epochs to draw.

.. GENERATED FROM PYTHON SOURCE LINES 24-27

.. code-block:: default

    from pycrostates.preprocessing import resample
    resamples = resample(raw, n_epochs=10, n_samples=150, random_state=40)
    resamples




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Resampling instance into 10 epochs of 150 covering 15.37% of the original data

    [<RawArray | 64 x 150 (0.9 s), ~140 kB, data loaded>, <RawArray | 64 x 150 (0.9 s), ~140 kB, data loaded>, <RawArray | 64 x 150 (0.9 s), ~140 kB, data loaded>, <RawArray | 64 x 150 (0.9 s), ~140 kB, data loaded>, <RawArray | 64 x 150 (0.9 s), ~140 kB, data loaded>, <RawArray | 64 x 150 (0.9 s), ~140 kB, data loaded>, <RawArray | 64 x 150 (0.9 s), ~140 kB, data loaded>, <RawArray | 64 x 150 (0.9 s), ~140 kB, data loaded>, <RawArray | 64 x 150 (0.9 s), ~140 kB, data loaded>, <RawArray | 64 x 150 (0.9 s), ~140 kB, data loaded>]



.. GENERATED FROM PYTHON SOURCE LINES 28-31

We can also use the 'coverage' parameter to automatically compute one of the two preivous parameters
based on the amount of original data we want to cover.
for exemple by setting n_epochs and coverage:

.. GENERATED FROM PYTHON SOURCE LINES 31-33

.. code-block:: default

    resamples = resample(raw, n_epochs=10, coverage=0.5, random_state=40)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Resampling instance into 10 epochs of 488 covering 50.00% of the original data




.. GENERATED FROM PYTHON SOURCE LINES 34-36

.. code-block:: default

    resamples = resample(raw, n_samples=150, coverage=0.5, random_state=40)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Resampling instance into 32 epochs of 150 covering 50.00% of the original data




.. GENERATED FROM PYTHON SOURCE LINES 37-38

Finally, we can also use this function to resample :func:`~mne.epochs.Epochs`

.. GENERATED FROM PYTHON SOURCE LINES 38-39

.. code-block:: default

    epochs = mne.make_fixed_length_epochs(raw, duration=2, preload=True)
    resamples = resample(epochs, n_samples=150, coverage=0.5, random_state=40)



.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Not setting metadata
    Not setting metadata
    30 matching events found
    No baseline correction applied
    0 projection items activated
    Loading data for 30 events and 320 original time points ...
    0 bad epochs dropped
    Resampling instance into 32 epochs of 150 covering 50.00% of the original data





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.119 seconds)


.. _sphx_glr_download_auto_tutorials_preprocessing_plot_resampling.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_resampling.py <plot_resampling.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_resampling.ipynb <plot_resampling.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
