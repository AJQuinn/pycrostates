
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_tutorials\preprocessing\plot_extract_gfp_peaks.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_tutorials_preprocessing_plot_extract_gfp_peaks.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_tutorials_preprocessing_plot_extract_gfp_peaks.py:


Global field power peaks extraction
===================================

This example demonstrates how to extract global field power (gfp) peaks for an eeg recording.

.. GENERATED FROM PYTHON SOURCE LINES 9-10

We start by loading some example data:

.. GENERATED FROM PYTHON SOURCE LINES 10-21

.. code-block:: default

    import mne
    from mne.io import read_raw_edf
    from mne.datasets import eegbci
    from mne.channels import make_standard_montage
    subject = 1
    runs = [1]

    raw_fnames = eegbci.load_data(subject, runs, update_path=True)[0]
    raw = read_raw_edf(raw_fnames, preload=True)
    raw.pick('eeg')





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Extracting EDF parameters from C:\Users\Victor\mne_data\MNE-eegbci-data\files\eegmmidb\1.0.0\S001\S001R01.edf...
    EDF file detected
    Setting channel info structure...
    Creating raw.info structure...
    Reading 0 ... 9759  =      0.000 ...    60.994 secs...

    <RawEDF | S001R01.edf, 64 x 9760 (61.0 s), ~4.8 MB, data loaded>



.. GENERATED FROM PYTHON SOURCE LINES 22-24

We can then use the :func:`~pycrostates.preprocessing.extract_gfp_peaks` function to extract samples with highest global field power.
The min_peak_distance allow to select the minimum number of sample beween 2 selected peaks.

.. GENERATED FROM PYTHON SOURCE LINES 24-27

.. code-block:: default

    from pycrostates.preprocessing import extract_gfp_peaks
    raw_peaks = extract_gfp_peaks(raw, min_peak_distance=3)
    raw_peaks




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    1886 gfp peaks extracted out of 9760 samples(19.32% of the original data)

    <RawArray | 64 x 1886 (-1885.0 s), ~1008 kB, data loaded>



.. GENERATED FROM PYTHON SOURCE LINES 28-34

.. warning::

   The returned object will always be a :class:`~mne.io.Raw`, but
   should not be used for any other purpose than fitting a
   clustering algorithm. To avoid any misuse of this object,
   we have deliberately assigned its sampling rate to -1.

.. GENERATED FROM PYTHON SOURCE LINES 35-37

.. code-block:: default


    raw_peaks.info['sfreq']




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    -1.0



.. GENERATED FROM PYTHON SOURCE LINES 38-40

Note that this function can also be used on :func:`~mne.epochs.Epochs`
but will always return a :class:`~mne.io.Raw` instance.

.. GENERATED FROM PYTHON SOURCE LINES 40-42

.. code-block:: default

    epochs = mne.make_fixed_length_epochs(raw, duration=2, preload=True)
    epochs_peaks = extract_gfp_peaks(epochs, min_peak_distance=3)
    epochs_peaks



.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Not setting metadata
    Not setting metadata
    30 matching events found
    No baseline correction applied
    0 projection items activated
    Loading data for 30 events and 320 original time points ...
    0 bad epochs dropped
    1870 gfp peaks extracted out of 9600 samples(19.48% of the original data)

    <RawArray | 64 x 1870 (-1869.0 s), ~1000 kB, data loaded>




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.144 seconds)


.. _sphx_glr_download_auto_tutorials_preprocessing_plot_extract_gfp_peaks.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_extract_gfp_peaks.py <plot_extract_gfp_peaks.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_extract_gfp_peaks.ipynb <plot_extract_gfp_peaks.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
